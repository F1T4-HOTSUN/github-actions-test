name: CI/CD Pipeline
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Docker 로그인
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 3. Docker 이미지 빌드 및 푸시
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/github-action-test:latest

    # 4. AWS EKS 클러스터 설정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # 5. EKS kubeconfig 생성 및 환경 변수 설정
    - name: Set kubeconfig as an environment variable
      run: |
        aws eks update-kubeconfig --region ap-northeast-2 --name hotsun-eks-yiztG3Cs
        export KUBECONFIG=$HOME/.kube/config
        echo "KUBECONFIG=$HOME/.kube/config" >> $GITHUB_ENV

    # 6. kubectl을 사용한 EKS 배포
    - name: Deploy to EKS
      run: |
        kubectl apply -f kubernetes/namespace.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

